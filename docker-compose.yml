name: bank

services:
  db:
    image: postgres:15-alpine
    container_name: bank_db
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PORT: ${POSTGRES_PORT}
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend_network

  redis:
    image: redis:alpine
    container_name: bank_redis
    ports:
      - "6380:6379"
    networks:
      - backend_network

  api:
    image: openjdk:17-jdk-slim
    container_name: bank_api
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      JWT_ACCESS_SECRET: ${JWT_ACCESS_SECRET}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET}
      JAVA_TOOL_OPTIONS: -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005
    ports:
      - "8080:8080"
      - "5005:5005"
    networks:
      - backend_network
    volumes:
      - ./target:/app
      - ./src/main/resources:/app/src/main/resources
    command: ["java", "-jar", "/app/bank-api.jar"]
    depends_on:
      - redis
      - db

volumes:
  postgres_data:

networks:
  backend_network: